1. pepcoding - recursion: https://youtube.com/playlist?list=PL-Jc9J83PIiFxaBahjslhBD1LiJAV7nKs [in progress]

2. pepcoding - DP: https://youtube.com/playlist?list=PL-Jc9J83PIiG8fE6rj9F5a6uyQ5WPdqKy

3. microservice: https://youtube.com/playlist?list=PLD-mYtebG3X9HaZ1T39-aF4ghEtWy9-v3 along with springboot too.

4. print first repeating number in array

5. delete the char from a string such that it appears unique time - input - aaabbb output -1, it will remove one "a" or one "b" so output =1

6. programming for you- print string in permutation input- aB output -AB,ab,Ab,aB,

7. given a integer N , print the lowest number whose sum is N . input - 10 output-19

8. given a string x.x.x.x /x:x:x:x:x:x:x . print ipv4 or Ipv6

9. sort roman numerals java

11. divide array in three parts:
all the sub arrays sum should be equal
sum of first array< sum of mid array < sum of right array

12.
You are given row x col grid representing a map where grid[i][j] = 1 represents land and grid[i][j] = 0 represents water.
Grid cells are connected horizontally/vertically (not diagonally). The grid is completely surrounded by water, and there is 
exactly one island (i.e., one or more connected land cells).
The island doesn't have "lakes", meaning the water inside isn't connected to the water around the island. 
One cell is a square with side length 1. The grid is rectangular, width and height don't exceed 100. Determine the perimeter of the island.

