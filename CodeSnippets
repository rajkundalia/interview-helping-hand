1. 
String[] sa = {"charlie ", "bob ", "andy ", "dave "};
Collections.sort(Arrays.asList(sa), null);
System.out.println(sa[0]); // o/p: andy

2. 
Stream st = Stream.iterate("", (str) -> str + "x");
st.limit(3).map(str -> str + "y").forEach(x -> System.out.println(x)); //o/p xxy
https://mkyong.com/java8/java-8-stream-iterate-examples/

3.
package check;

abstract class Animal {
    abstract void eat();
}
class Dog extends Animal {

    @Override
    void eat() {
        System.out.println("dog eats biscuits");
    }
}
class Cat extends Animal {

    @Override
    void eat() {
        System.out.println("cat eats biscuits");
    }
}
public class Test {
    public static void main(String[] args) {
        Animal[] animals = new Dog[2];
        animals[0] = new Dog();
        animals[1] = new Cat();
        animals[0].eat();
        animals[1].eat();
    }
}
o/p:java.lang.ArrayStoreException: check.Cat

4.
Path p1 = Paths.get("D:\\IntelliJProjects\\BHG\\BHG.iml");
System.out.println(p1.getName(3));
o/p: java.lang.IllegalArgumentException
p1.getName(2) -> BHG.iml

5.
Path p1 = Paths.get("photos/goa");
Path p2 = Paths.get("/index.html");
Path p3 = p1.relativize(p2);
System.out.println(p3);
o/p: java.lang.IllegalArgumentException: 'other' is different type of Path

if "photos/goa" is changed to "/photos/goa" -> o/p ..\..\index.html
